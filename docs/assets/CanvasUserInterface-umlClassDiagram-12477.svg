<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1193px" preserveAspectRatio="none" style="width:949px;height:1193px;background:#00000000;" version="1.1" viewBox="0 0 949 1193" width="949px" zoomAndPan="magnify"><defs><filter height="300%" id="f1vlcmuh6et1ut" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[5bdd792f727678821364936e989adc58]
class CanvasUserInterface--><rect codeLine="4" fill="#FEFECE" filter="url(#f1vlcmuh6et1ut)" height="65.6094" id="CanvasUserInterface" style="stroke:#A80036;stroke-width:1.5;" width="361" x="290.5" y="7"/><ellipse cx="402.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M398.1719,18.7656 L398.1719,16.6094 L405.5625,16.6094 L405.5625,18.7656 L403.0938,18.7656 L403.0938,26.8438 L405.5625,26.8438 L405.5625,29 L398.1719,29 L398.1719,26.8438 L400.6406,26.8438 L400.6406,18.7656 L398.1719,18.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="129" x="422.75" y="27.1543">CanvasUserInterface</text><line style="stroke:#A80036;stroke-width:1.5;" x1="291.5" x2="650.5" y1="39" y2="39"/><ellipse cx="301.5" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="310.5" y="53.2104">drawFocusIfNeeded(element: Element) : void</text><ellipse cx="301.5" cy="62.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="310.5" y="66.0151">drawFocusIfNeeded(path: Path2D, element: Element) : void</text><!--MD5=[2bc3d7d7164cb76a475492e3d9a1a509]
class CanvasRenderingContext2D--><rect codeLine="8" fill="#FEFECE" filter="url(#f1vlcmuh6et1ut)" height="1046.7656" id="CanvasRenderingContext2D" style="stroke:#A80036;stroke-width:1.5;" width="928" x="7" y="133"/><ellipse cx="379.75" cy="149" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M375.6719,144.7656 L375.6719,142.6094 L383.0625,142.6094 L383.0625,144.7656 L380.5938,144.7656 L380.5938,152.8438 L383.0625,152.8438 L383.0625,155 L375.6719,155 L375.6719,152.8438 L378.1406,152.8438 L378.1406,144.7656 L375.6719,144.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="174" x="400.25" y="153.1543">CanvasRenderingContext2D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="934" y1="165" y2="165"/><ellipse cx="18" cy="176" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="27" y="179.2104">canvas : HTMLCanvasElement</text><ellipse cx="18" cy="188.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="192.0151">direction : CanvasDirection</text><ellipse cx="18" cy="201.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="204.8198">fillStyle : string | CanvasGradient | CanvasPattern</text><ellipse cx="18" cy="214.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="27" y="217.6245">filter : string</text><ellipse cx="18" cy="227.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="27" y="230.4292">font : string</text><ellipse cx="18" cy="240.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="186" x="27" y="243.2339">fontKerning : CanvasFontKerning</text><ellipse cx="18" cy="252.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="27" y="256.0386">globalAlpha : number</text><ellipse cx="18" cy="265.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="268.8433">globalCompositeOperation : GlobalCompositeOperation</text><ellipse cx="18" cy="278.4375" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="27" y="281.6479">imageSmoothingEnabled : boolean</text><ellipse cx="18" cy="291.2422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="294.4526">imageSmoothingQuality : ImageSmoothingQuality</text><ellipse cx="18" cy="304.0469" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="307.2573">lineCap : CanvasLineCap</text><ellipse cx="18" cy="316.8516" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="27" y="320.062">lineDashOffset : number</text><ellipse cx="18" cy="329.6563" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="27" y="332.8667">lineJoin : CanvasLineJoin</text><ellipse cx="18" cy="342.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="345.6714">lineWidth : number</text><ellipse cx="18" cy="355.2656" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="27" y="358.4761">miterLimit : number</text><ellipse cx="18" cy="368.0703" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="371.2808">shadowBlur : number</text><ellipse cx="18" cy="380.875" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="27" y="384.0854">shadowColor : string</text><ellipse cx="18" cy="393.6797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="396.8901">shadowOffsetX : number</text><ellipse cx="18" cy="406.4844" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="409.6948">shadowOffsetY : number</text><ellipse cx="18" cy="419.2891" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="422.4995">strokeStyle : string | CanvasGradient | CanvasPattern</text><ellipse cx="18" cy="432.0938" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="435.3042">textAlign : CanvasTextAlign</text><ellipse cx="18" cy="444.8984" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="27" y="448.1089">textBaseline : CanvasTextBaseline</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="934" y1="454.7031" y2="454.7031"/><ellipse cx="18" cy="465.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="669" x="27" y="468.9136">arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise: boolean) : void</text><ellipse cx="18" cy="478.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="455" x="27" y="481.7183">arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) : void</text><ellipse cx="18" cy="491.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="27" y="494.5229">beginPath() : void</text><ellipse cx="18" cy="504.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="592" x="27" y="507.3276">bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) : void</text><ellipse cx="18" cy="516.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="520.1323">clearRect(x: number, y: number, w: number, h: number) : void</text><ellipse cx="18" cy="529.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="27" y="532.937">clip(fillRule: CanvasFillRule) : void</text><ellipse cx="18" cy="542.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="27" y="545.7417">clip(path: Path2D, fillRule: CanvasFillRule) : void</text><ellipse cx="18" cy="555.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="558.5464">closePath() : void</text><ellipse cx="18" cy="568.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="469" x="27" y="571.3511">createConicGradient(startAngle: number, x: number, y: number) : CanvasGradient</text><ellipse cx="18" cy="580.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="490" x="27" y="584.1558">createImageData(sw: number, sh: number, settings: ImageDataSettings) : ImageData</text><ellipse cx="18" cy="593.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="596.9604">createImageData(imagedata: ImageData) : ImageData</text><ellipse cx="18" cy="606.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="515" x="27" y="609.7651">createLinearGradient(x0: number, y0: number, x1: number, y1: number) : CanvasGradient</text><ellipse cx="18" cy="619.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="443" x="27" y="622.5698">createPattern(image: CanvasImageSource, repetition: string) : CanvasPattern</text><ellipse cx="18" cy="632.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="658" x="27" y="635.3745">createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number) : CanvasGradient</text><ellipse cx="18" cy="644.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="27" y="648.1792">drawFocusIfNeeded(element: Element) : void</text><ellipse cx="18" cy="657.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="27" y="660.9839">drawFocusIfNeeded(path: Path2D, element: Element) : void</text><ellipse cx="18" cy="670.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="673.7886">drawImage(image: CanvasImageSource, dx: number, dy: number) : void</text><ellipse cx="18" cy="683.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="562" x="27" y="686.5933">drawImage(image: CanvasImageSource, dx: number, dy: number, dw: number, dh: number) : void</text><ellipse cx="18" cy="696.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="858" x="27" y="699.3979">drawImage(image: CanvasImageSource, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, dw: number, dh: number) : void</text><ellipse cx="18" cy="708.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="902" x="27" y="712.2026">ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, counterclockwise: boolean) : void</text><ellipse cx="18" cy="721.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="182" x="27" y="725.0073">fill(fillRule: CanvasFillRule) : void</text><ellipse cx="18" cy="734.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="737.812">fill(path: Path2D, fillRule: CanvasFillRule) : void</text><ellipse cx="18" cy="747.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="27" y="750.6167">fillRect(x: number, y: number, w: number, h: number) : void</text><ellipse cx="18" cy="760.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="27" y="763.4214">fillText(text: string, x: number, y: number, maxWidth: number) : void</text><ellipse cx="18" cy="773.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="27" y="776.2261">getContextAttributes() : CanvasRenderingContext2DSettings</text><ellipse cx="18" cy="785.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="618" x="27" y="789.0308">getImageData(sx: number, sy: number, sw: number, sh: number, settings: ImageDataSettings) : ImageData</text><ellipse cx="18" cy="798.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="801.8354">getLineDash() : number[]</text><ellipse cx="18" cy="811.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="814.6401">getTransform() : DOMMatrix</text><ellipse cx="18" cy="824.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="827.4448">isPointInPath(x: number, y: number, fillRule: CanvasFillRule) : boolean</text><ellipse cx="18" cy="837.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="477" x="27" y="840.2495">isPointInPath(path: Path2D, x: number, y: number, fillRule: CanvasFillRule) : boolean</text><ellipse cx="18" cy="849.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="27" y="853.0542">isPointInStroke(x: number, y: number) : boolean</text><ellipse cx="18" cy="862.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="865.8589">isPointInStroke(path: Path2D, x: number, y: number) : boolean</text><ellipse cx="18" cy="875.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="27" y="878.6636">lineTo(x: number, y: number) : void</text><ellipse cx="18" cy="888.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="27" y="891.4683">measureText(text: string) : TextMetrics</text><ellipse cx="18" cy="901.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="27" y="904.2729">moveTo(x: number, y: number) : void</text><ellipse cx="18" cy="913.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="397" x="27" y="917.0776">putImageData(imagedata: ImageData, dx: number, dy: number) : void</text><ellipse cx="18" cy="926.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="817" x="27" y="929.8823">putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number) : void</text><ellipse cx="18" cy="939.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="27" y="942.687">quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) : void</text><ellipse cx="18" cy="952.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="955.4917">rect(x: number, y: number, w: number, h: number) : void</text><ellipse cx="18" cy="965.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="27" y="968.2964">resetTransform() : void</text><ellipse cx="18" cy="977.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="27" y="981.1011">restore() : void</text><ellipse cx="18" cy="990.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="27" y="993.9058">rotate(angle: number) : void</text><ellipse cx="18" cy="1003.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="683" x="27" y="1006.7104">roundRect(x: number, y: number, w: number, h: number, radii: number | DOMPointInit | (number | DOMPointInit)[]) : void</text><ellipse cx="18" cy="1016.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="728" x="27" y="1019.5151">roundRect(x: number, y: number, w: number, h: number, radii: number | DOMPointInit | Iterable&lt;number | DOMPointInit&gt;) : void</text><ellipse cx="18" cy="1029.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="27" y="1032.3198">save() : void</text><ellipse cx="18" cy="1041.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="27" y="1045.1245">scale(x: number, y: number) : void</text><ellipse cx="18" cy="1054.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="27" y="1057.9292">setLineDash(segments: number[]) : void</text><ellipse cx="18" cy="1067.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="27" y="1070.7339">setLineDash(segments: Iterable&lt;number&gt;) : void</text><ellipse cx="18" cy="1080.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="511" x="27" y="1083.5386">setTransform(a: number, b: number, c: number, d: number, e: number, f: number) : void</text><ellipse cx="18" cy="1093.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="1096.3433">setTransform(transform: DOMMatrix2DInit) : void</text><ellipse cx="18" cy="1105.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="27" y="1109.1479">stroke() : void</text><ellipse cx="18" cy="1118.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="27" y="1121.9526">stroke(path: Path2D) : void</text><ellipse cx="18" cy="1131.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="1134.7573">strokeRect(x: number, y: number, w: number, h: number) : void</text><ellipse cx="18" cy="1144.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="27" y="1147.562">strokeText(text: string, x: number, y: number, maxWidth: number) : void</text><ellipse cx="18" cy="1157.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="490" x="27" y="1160.3667">transform(a: number, b: number, c: number, d: number, e: number, f: number) : void</text><ellipse cx="18" cy="1169.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="27" y="1173.1714">translate(x: number, y: number) : void</text><!--MD5=[679e6e85ec7acd0a590f93d8e15c36ba]
reverse link CanvasUserInterface to CanvasRenderingContext2D--><path codeLine="88" d="M471,93.42 C471,105.03 471,118.26 471,132.78 " fill="none" id="CanvasUserInterface-backto-CanvasRenderingContext2D" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="464,93.17,471,73.17,478,93.17,464,93.17" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[efaa7d05820a3c48f99f984919da3648]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
interface "CanvasUserInterface" {
    +drawFocusIfNeeded(element: Element) : void
    +drawFocusIfNeeded(path: Path2D, element: Element) : void
}
interface "CanvasRenderingContext2D" {
    +canvas : HTMLCanvasElement
    +direction : CanvasDirection
    +fillStyle : string | CanvasGradient | CanvasPattern
    +filter : string
    +font : string
    +fontKerning : CanvasFontKerning
    +globalAlpha : number
    +globalCompositeOperation : GlobalCompositeOperation
    +imageSmoothingEnabled : boolean
    +imageSmoothingQuality : ImageSmoothingQuality
    +lineCap : CanvasLineCap
    +lineDashOffset : number
    +lineJoin : CanvasLineJoin
    +lineWidth : number
    +miterLimit : number
    +shadowBlur : number
    +shadowColor : string
    +shadowOffsetX : number
    +shadowOffsetY : number
    +strokeStyle : string | CanvasGradient | CanvasPattern
    +textAlign : CanvasTextAlign
    +textBaseline : CanvasTextBaseline
    +arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise: boolean) : void
    +arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) : void
    +beginPath() : void
    +bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) : void
    +clearRect(x: number, y: number, w: number, h: number) : void
    +clip(fillRule: CanvasFillRule) : void
    +clip(path: Path2D, fillRule: CanvasFillRule) : void
    +closePath() : void
    +createConicGradient(startAngle: number, x: number, y: number) : CanvasGradient
    +createImageData(sw: number, sh: number, settings: ImageDataSettings) : ImageData
    +createImageData(imagedata: ImageData) : ImageData
    +createLinearGradient(x0: number, y0: number, x1: number, y1: number) : CanvasGradient
    +createPattern(image: CanvasImageSource, repetition: string) : CanvasPattern
    +createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number) : CanvasGradient
    +drawFocusIfNeeded(element: Element) : void
    +drawFocusIfNeeded(path: Path2D, element: Element) : void
    +drawImage(image: CanvasImageSource, dx: number, dy: number) : void
    +drawImage(image: CanvasImageSource, dx: number, dy: number, dw: number, dh: number) : void
    +drawImage(image: CanvasImageSource, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, dw: number, dh: number) : void
    +ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, counterclockwise: boolean) : void
    +fill(fillRule: CanvasFillRule) : void
    +fill(path: Path2D, fillRule: CanvasFillRule) : void
    +fillRect(x: number, y: number, w: number, h: number) : void
    +fillText(text: string, x: number, y: number, maxWidth: number) : void
    +getContextAttributes() : CanvasRenderingContext2DSettings
    +getImageData(sx: number, sy: number, sw: number, sh: number, settings: ImageDataSettings) : ImageData
    +getLineDash() : number[]
    +getTransform() : DOMMatrix
    +isPointInPath(x: number, y: number, fillRule: CanvasFillRule) : boolean
    +isPointInPath(path: Path2D, x: number, y: number, fillRule: CanvasFillRule) : boolean
    +isPointInStroke(x: number, y: number) : boolean
    +isPointInStroke(path: Path2D, x: number, y: number) : boolean
    +lineTo(x: number, y: number) : void
    +measureText(text: string) : TextMetrics
    +moveTo(x: number, y: number) : void
    +putImageData(imagedata: ImageData, dx: number, dy: number) : void
    +putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number) : void
    +quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) : void
    +rect(x: number, y: number, w: number, h: number) : void
    +resetTransform() : void
    +restore() : void
    +rotate(angle: number) : void
    +roundRect(x: number, y: number, w: number, h: number, radii: number | DOMPointInit | (number | DOMPointInit)[]) : void
    +roundRect(x: number, y: number, w: number, h: number, radii: number | DOMPointInit | Iterable<number | DOMPointInit>) : void
    +save() : void
    +scale(x: number, y: number) : void
    +setLineDash(segments: number[]) : void
    +setLineDash(segments: Iterable<number>) : void
    +setTransform(a: number, b: number, c: number, d: number, e: number, f: number) : void
    +setTransform(transform: DOMMatrix2DInit) : void
    +stroke() : void
    +stroke(path: Path2D) : void
    +strokeRect(x: number, y: number, w: number, h: number) : void
    +strokeText(text: string, x: number, y: number, maxWidth: number) : void
    +transform(a: number, b: number, c: number, d: number, e: number, f: number) : void
    +translate(x: number, y: number) : void
}
"CanvasUserInterface" <|- - "CanvasRenderingContext2D"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 11:46:50 EST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>